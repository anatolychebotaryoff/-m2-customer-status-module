<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */
/** @var $this Mage_Paypal_Block_Express_Review */

$billingBlock = $this->getChild('billing')->setFieldNamePrefix('billing')->setHideEmailAddress(true);
$shippingAddress = $this->getShippingAddress();
?>

<div class="page-title">
    <h1><?php echo $this->__('Review Order') ?></h1>
</div>
<?php echo $this->getMessagesBlock()->toHtml() ?>
<script type="text/javascript">
    //<![CDATA[
    var countryRegions =
    <?php echo $this->helper('directory')->getRegionJson() ?>
    //]]>
</script>
<h2 class="sub-title">
    Please confirm your addresses
</h2>
<div class="paypal-review-order">

    <form method="post" id="order_review_form" action="<?php echo $this->getPlaceOrderUrl() ?>">
        <div id="paypal_express_review_before"></div>
        <div class="grid_10" id="paypal_express_review_left">
            <?php if (!$billingBlock->isCustomerLoggedIn()): ?>
                <div class="info-set col2-set">
                    <h2 class="legend"><?php echo $this->__('Customer Information') ?></h2>
                    <ul class="form-list form-list-narrow">
                        <li id="customer-info-form" class="address-form">
                            <div class="field">
                                <label for="customer:email"
                                       class="required"><em>*</em><?php echo $this->__('Email Address') ?></label>

                                <div class="input-box">
                                    <input type="text" name="customer-email" id="customer:email"
                                           value="<?php echo $this->escapeHtml($billingBlock->getAddress()->getEmail()) ?>"
                                           title="<?php echo $this->__('Email Address') ?>"
                                           class="input-text validate-email required-entry"/>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            <?php endif ?>
            <div class="info-set col2-set">
                <div class="col-1" id="billing-address">
                    <h2 class="legend"><?php echo $this->__('Billing Address') ?></h2>
                    <?php if ($shippingAddress): ?>
                        <?php echo $billingBlock->setShowAsShippingCheckbox(true)->toHtml(); ?>
                    <?php else: ?>
                        <?php echo $billingBlock->toHtml(); ?>
                    <?php endif; ?>
                </div>
                <?php if ($shippingAddress): ?>
                <div class="col-2" id="shipping-address">
                    <h2 class="legend"><?php echo $this->__('Shipping Address') ?></h2>
                    <?php echo $this->getChild('shipping')->setFieldNamePrefix('shipping')->setHideEmailAddress(true)->toHtml(); ?>
                </div>
            </div>

        </div>
        <!-- end grid 10-->

        <div class="col-2 grid_1 paypal_grid_separator">&nbsp;</div>
        <div class="grid_13" id="paypal_express_review_right">
            <div class="info-set">
                <div id="details-reload">
                    <?php echo $this->getChildHtml('details') ?>
                </div>
            </div>

            <div class="buttons-set buttons-set-order" id="review-buttons-container">
                <button type="button" id="review_button" value="<?php echo $this->__('Place Order') ?>"
                        class="button btn-checkout"><span><span><?php echo $this->__('Place Order') ?></span></span>
                </button>
                <button style="display: none" type="button" id="review_submit" value="<?php echo $this->__('Place Order') ?>"
                        class="button btn-checkout"><span><span><?php echo $this->__('Place Order') ?></span></span>
                </button>
                <button type="button" id="update_order" class="button btn-checkout">
                    <span><span><?php echo $this->__('Update Order Data') ?></span></span></button>
                            <span class="please-wait" id="review-please-wait" style="display:none;">
                                <img src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>"
                                     alt="<?php echo $this->__('Submitting order information...') ?>"
                                     title="<?php echo $this->__('Submitting order information...') ?>"
                                     class="v-middle"/> <?php echo $this->__('Submitting order information...') ?>
                            </span>
            </div>

        </div>

        <?php endif; ?>


    </form>
</div>
</div>
<script type="text/javascript">
    //<![CDATA[
    function reviewOrderSubmit() {
        jQuery("#review_button").trigger("click");
    }
    function reviewCreateSubmitButton() {
        if (!jQuery('#review_button2').length) jQuery('.paypal-review-order').prepend('<div id="reviewButtonDiv"><button class="button" value="<?php echo $this->__('Place Order') ?>" id="review_button2" type="button" onclick="reviewOrderSubmit()" ><span><span><?php echo $this->__('Place Order') ?></span></span></button></div>')
    }

    function reviewMoveMobileButtons(isMobile) {
        if(isMobile){
            jQuery("#review-buttons-container").prepend(jQuery('#update_order'));
        }else{
            jQuery("#update_order").insertAfter("#review_submit");
        }
    }
    var mobileLimitWitdth = 767;
    addEvent(window, 'load', function () {
        var PaypalwindowWidth = jQuery(window).width();
        var movedToLeft = false;
        jQuery(window).resize(function () {
            PaypalwindowWidth = jQuery(window).width();
            if (PaypalwindowWidth <= mobileLimitWitdth) {
                reviewCreateSubmitButton();
                jQuery("#reviewButtonDiv").show();
            } else {
                if (PaypalwindowWidth > mobileLimitWitdth) {
                    jQuery("#reviewButtonDiv").hide();
                }
            }
            if (PaypalwindowWidth <= mobileLimitWitdth && !movedToLeft) {
                jQuery("#paypal_express_review_right").appendTo("#paypal_express_review_before");
                movedToLeft = true;
                jQuery("#reviewButton2").show();
                jQuery("#billing-address-form ul").prepend(jQuery("#billing-address-form ul").find('.control'));
            } else {
                if (PaypalwindowWidth > mobileLimitWitdth && movedToLeft) {
                    jQuery("#paypal_express_review_right").insertAfter(".paypal_grid_separator");
                    movedToLeft = false;
                    jQuery("#reviewButton2").hide();
                    jQuery("#billing-address-form ul").append(jQuery("#billing-address-form ul").find('.control'));
                }
            }
            reviewMoveMobileButtons(movedToLeft);
        });

        if (PaypalwindowWidth <= mobileLimitWitdth) {
            jQuery("#paypal_express_review_right").appendTo("#paypal_express_review_before");
            reviewCreateSubmitButton();
            movedToLeft = true;
            jQuery("#billing-address-form ul").prepend(jQuery("#billing-address-form ul").find('.control'));
            reviewMoveMobileButtons(movedToLeft);
        }

// submit buttons are not needed when submitting with ajax
        $('review_submit').hide();
        if ($('update_shipping_method_submit')) {
            $('update_shipping_method_submit').hide();
        }

        <?php if ($this->getUseAjax()):?>
        OrderReviewController.prototype._submitOrder = function () {
            if (this._canSubmitOrder) {
                if (this._pleaseWait) {
                    this._pleaseWait.show();
                }
                new Ajax.Request(this.form.action, {
                    parameters: {isAjax: 1, method: 'POST'},
                    onSuccess: function (transport) {
                        try {
                            response = eval('(' + transport.responseText + ')');
                        } catch (e) {
                            response = {};
                        }
                        if (response.redirect) {
                            setLocation(response.redirect);
                            return;
                        }
                        if (response.success) {
                            setLocation('<?php echo $this->getSuccessUrl()?>');
                            return;
                        } else {
                            var msg = response.error_messages;
                            if (typeof(msg) == 'object') {
                                msg = msg.join("\n");
                            }
                            if (msg) {
                                $('review-please-wait').hide();
                                alert(msg);
                                return;
                            }
                        }
                        $('review-please-wait').hide();
                        alert('<?php echo $this->jsQuoteEscape($this->__('Unknown Error. Please try again later.')); ?>');
                        return;
                    },
                    onFailure: function () {
                        alert('<?php echo $this->jsQuoteEscape($this->__('Server Error. Please try again.')) ?>');
                        $('review-please-wait').hide();
                    }
                });
            }
        };
        <?php endif ?>
        OrderReviewController.prototype._updateOrderSubmit = function(shouldDisable) {
            var isDisabled = shouldDisable || (
                    this.reloadByShippingSelect && (!this.shippingSelect || '' == this.shippingSelect.value)
                );
            this._canSubmitOrder = !isDisabled;
            if (this.formSubmit) {
                this._toggleButton(this.formSubmit, isDisabled);
                if ($('review_button2')) {
                    this._toggleButton($('review_button2'), isDisabled);
                }
            }
        };
        /**
         * Enable/Disable button
         *
         * @param button
         * @param disable
         */
        OrderReviewController.prototype._toggleButton = function(button, disable)
        {
            button.disabled = disable;
            button.removeClassName('no-checkout');
            $('update_order').removeClassName('no-checkout');
            button.setStyle({opacity:1});
            if (disable) {
                button.addClassName('no-checkout');
                $('update_order').addClassName('no-checkout');
                button.setStyle({opacity:.5});
            }
        };

        PayPalExpressAjax = new OrderReviewController($('order_review_form'), $('review_button'),
            'shipping_method', $('shipping-address-form'), 'details-reload'
        );
        PayPalExpressAjax.addPleaseWait($('review-please-wait'));
        PayPalExpressAjax.setShippingAddressContainer($('shipping-address'));
        PayPalExpressAjax.setShippingMethodContainer('shipping-method-container');
        PayPalExpressAjax.shippingMethodsUpdateUrl = '<?php echo $this->escapeHtml($this->getUpdateShippingMethodsUrl()) ?>';
        PayPalExpressAjax.setUpdateButton($('update_order'), '<?php echo $this->escapeHtml($this->getUpdateOrderSubmitUrl()) ?>', 'details-reload');
        if ($('checkboxSameAsShippingInput')) {
            PayPalExpressAjax.setCopyElement($('checkboxSameAsShippingInput'));
        }
    });
    //]]>
</script>
